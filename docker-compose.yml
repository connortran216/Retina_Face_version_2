version: '2.0'
services:

### API GATEWAY
    api_gateway:
        build:
            context: ./api_gateway
        ports:
            - '8888:8888'
        volumes:
            - ./api_gateway:/home/jovyan
        networks:
            facial_recognition_network:
                aliases:
                    - api_gateway


### CORE
    core:
        build:
            context: ./core
        ports:
            - '8000:8000'
        volumes:
            - ./core:/home/jovyan
        links:
            - embedder
            - milvus
            - api_gateway
            - mongo_db
        networks:
            facial_recognition_network:
                aliases:
                    - core
        depends_on:
            - kafka


### EMBEDDER
    embedder:
        build:
            context: ./embedder
        volumes:
            - ./embedder:/home/jovyan
        networks:
            facial_recognition_network:
                aliases:
                    - embedder
        depends_on:
            -   kafka


### MONGO DB
    mongo_db:
        image: mongo:latest
        ports:
            - '27017:27017'
        networks:
            facial_recognition_network:
                aliases:
                    - mongo_db


### MILVUS
    milvus:
        image: milvusdb/milvus:0.10.4-cpu-d120220-e72454 #milvusdb/milvus:0.9.1-cpu-d052920-e04ed5
        ports:
            - '19530:19530'
            - '19121:19121'
        volumes:
            - ./milvus/db:/var/lib/milvus/db
            - ./milvus/conf:/var/lib/milvus/conf
            - ./milvus/logs:/var/lib/milvus/logs
            - ./milvus/wal:/var/lib/milvus/wal
        networks:
            facial_recognition_network:
                aliases:
                    - milvus


### ZOOKEEPER
    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"
        networks:
            facial_recognition_network:
                aliases:
                    -   zookeeper


### KAFKA
    kafka:
        image: wurstmeister/kafka
        ports:
            - "9092:9092"
            - "9093:9093"
        environment:
            #KAFKA_ADVERTISED_HOST_NAME: kafka
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka:9093
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "embedder_request, embedder_response"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_NUM_PARTITIONS: 10
        networks:
            facial_recognition_network:
                aliases:
                    - kafka
        depends_on:
            - zookeeper

### KAFKA CONSUMER
    kafka_consumer:
        build:
            context: ./kafka_consumer
        volumes:
            - ./kafka_consumer:/home/jovyan
        networks:
            facial_recognition_network:
                aliases:
                    - kafka_consumer
        depends_on:
            - kafka


networks:
    facial_recognition_network:
        external: true